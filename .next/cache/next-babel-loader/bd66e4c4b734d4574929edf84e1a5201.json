{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\Next Js Project\\\\spacex-project\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    rocket(country: \\\"USA\\\") {\\n      country\\n      type\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      {\\n        rocket(country: \\\"USA\\\") {\\n          country\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport ApolloClient from 'apollo-boost';\nimport { gql } from \"apollo-boost\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/react-hooks';\nvar client = new ApolloClient({\n  uri: 'https://api.spacex.land/graphql/'\n});\nclient.query({\n  query: gql(_templateObject())\n}).then(function (result) {\n  return console.log(result);\n});\nvar rocket = gql(_templateObject2());\n\nvar App = function App() {\n  return __jsx(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"My first Apollo app \\uD83D\\uDE80\")));\n};\n\nfunction ExchangeRates() {\n  var _useQuery = useQuery(EXCHANGE_RATES),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Error :(\");\n  return data.rates.map(function (_ref) {\n    var currency = _ref.currency,\n        rate = _ref.rate;\n    return __jsx(\"div\", {\n      key: currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, currency, \": \", rate));\n  });\n}\n\nrender(__jsx(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["D:/Next Js Project/spacex-project/pages/index.js"],"names":["ApolloClient","gql","React","render","ApolloProvider","client","uri","query","then","result","console","log","rocket","App","ExchangeRates","useQuery","EXCHANGE_RATES","loading","error","data","rates","map","currency","rate","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAGA,IAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;AAIAD,MAAM,CACHE,KADH,CACS;AACLA,EAAAA,KAAK,EAAEN,GAAF;AADA,CADT,EAUGO,IAVH,CAUQ,UAAAC,MAAM;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,CAVd;AAYE,IAAMG,MAAM,GAAGX,GAAH,oBAAZ;;AASA,IAAMY,GAAG,GAAG,SAANA,GAAM;AAAA,SACV,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAER,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,CADF,CADU;AAAA,CAAZ;;AAQA,SAASS,aAAT,GAAyB;AAAA,kBACUC,QAAQ,CAACC,cAAD,CADlB;AAAA,MACfC,OADe,aACfA,OADe;AAAA,MACNC,KADM,aACNA,KADM;AAAA,MACCC,IADD,aACCA,IADD;;AAGvB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SAAOC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,QAAaC,IAAb,QAAaA,IAAb;AAAA,WACpB;AAAK,MAAA,GAAG,EAAED,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QADH,QACeC,IADf,CADF,CADoB;AAAA,GAAf,CAAP;AAOD;;AAEDpB,MAAM,CAAC,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAUqB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN","sourcesContent":["import ApolloClient from 'apollo-boost';\r\nimport { gql } from \"apollo-boost\";\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\n\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://api.spacex.land/graphql/',\r\n});\r\n\r\nclient\r\n  .query({\r\n    query: gql`\r\n      {\r\n        rocket(country: \"USA\") {\r\n          country\r\n        }\r\n      }\r\n    `\r\n  })\r\n  .then(result => console.log(result));\r\n\r\n  const rocket = gql`\r\n  {\r\n    rocket(country: \"USA\") {\r\n      country\r\n      type\r\n    }\r\n  }\r\n`;\r\n\r\n  const App = () => (\r\n    <ApolloProvider client={client}>\r\n      <div>\r\n        <h2>My first Apollo app ðŸš€</h2>\r\n      </div>\r\n    </ApolloProvider>\r\n  );\r\n\r\n  function ExchangeRates() {\r\n    const { loading, error, data } = useQuery(EXCHANGE_RATES);\r\n  \r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error :(</p>;\r\n  \r\n    return data.rates.map(({ currency, rate }) => (\r\n      <div key={currency}>\r\n        <p>\r\n          {currency}: {rate}\r\n        </p>\r\n      </div>\r\n    ));\r\n  }\r\n  \r\n  render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}