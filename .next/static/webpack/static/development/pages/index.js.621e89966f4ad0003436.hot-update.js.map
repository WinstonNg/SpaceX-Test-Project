{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.621e89966f4ad0003436.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import ApolloClient from 'apollo-boost';\r\nimport { gql } from \"apollo-boost\";\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\n\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://api.spacex.land/graphql/',\r\n});\r\n\r\nclient\r\n  .query({\r\n    query: gql`\r\n      {\r\n        rocket(country: \"USA\") {\r\n          country\r\n        }\r\n      }\r\n    `\r\n  })\r\n  .then(result => console.log(result));\r\n\r\n  const rocket = gql`\r\n  {\r\n    rocket(country: \"USA\") {\r\n      country\r\n      type\r\n    }\r\n  }\r\n`;\r\n\r\n  const App = () => (\r\n    <ApolloProvider client={client}>\r\n      <div>\r\n        <h2>My first Apollo app ðŸš€</h2>\r\n      </div>\r\n    </ApolloProvider>\r\n  );\r\n\r\n  function ExchangeRates() {\r\n    const { loading, error, data } = useQuery(EXCHANGE_RATES);\r\n  \r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error :(</p>;\r\n  \r\n    return data.rates.map(({ currency, rate }) => (\r\n      <div key={currency}>\r\n        <p>\r\n          {currency}: {rate}\r\n        </p>\r\n      </div>\r\n    ));\r\n  }\r\n  \r\n  render(<App />, document.getElementById('root'));"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AADA;AAIA;AAEA;AADA;AASA;AAAA;AAEA;AACA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}